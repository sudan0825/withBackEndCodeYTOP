"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _history = require("history");

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _RouterContext = require("./RouterContext");

var _RouterContext2 = _interopRequireDefault(_RouterContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

/**
 * The public API for rendering a history-aware <a>.
 */

var Link = function (_React$Component) {
  _inherits(Link, _React$Component);

  function Link() {
    _classCallCheck(this, Link);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Link.prototype.handleClick = function handleClick(event, context) {
    if (this.props.onClick) this.props.onClick(event);

    if (!event.defaultPrevented && // onClick prevented default
    event.button === 0 && // ignore everything but left clicks
    !this.props.target && // let browser handle "target=_blank" etc.
    !isModifiedEvent(event) // ignore clicks with modifier keys
    ) {
        event.preventDefault();

        var method = this.props.replace ? context.history.replace : context.history.push;

        method(this.props.to);
      }
  };

  Link.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        innerRef = _props.innerRef,
        replace = _props.replace,
        to = _props.to,
        props = _objectWithoutProperties(_props, ["innerRef", "replace", "to"]); // eslint-disable-line no-unused-vars

    return _react2.default.createElement(
      _RouterContext2.default.Consumer,
      null,
      function (context) {
        !context ? process.env.NODE_ENV !== "production" ? (0, _invariant2.default)(false, "You should not use <Link> outside a <Router>") : (0, _invariant2.default)(false) : void 0;

        var location = typeof to === "string" ? (0, _history.createLocation)(to, null, null, context.location) : to;
        var href = location ? context.history.createHref(location) : "";

        return _react2.default.createElement("a", _extends({}, props, {
          onClick: function onClick(event) {
            return _this2.handleClick(event, context);
          },
          href: href,
          ref: innerRef
        }));
      }
    );
  };

  return Link;
}(_react2.default.Component);

Link.defaultProps = {
  replace: false
};


if (process.env.NODE_ENV !== "production") {
  var toType = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]);

  Link.propTypes = {
    innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    onClick: _propTypes2.default.func,
    replace: _propTypes2.default.bool,
    target: _propTypes2.default.string,
    to: toType.isRequired
  };
}

exports.default = Link;